install.packages("slidify")
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
getwd()
getwd()
getwd()
install.packages("swirl")
library("swirl")
swirl()
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555)
c(z, 555, z)
z * 2 + 100
my_sqrt <- z^-1
sqrt(z-1)
my_sqrt < sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
z + c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10)
c(1 , 2 , 3, 4) + c(0,10,100)
z * 2 + 1000
my_div
bye()
load("C:/Users/user/Desktop/MDECCLASS-R/3rd Course/Quiz1 - 1/.RData")
library(xslx)
installr::updateR()
library(knitr)
installed.packages("knitr")
library(knitr)
library(knitr)
install.packages("knitr")
library(knitr)
install.packages("installr")
setInternet2(TRUE)
installr::updateR()
updateR()
install.packages("installr"); require(installr)}
updateR()
library(installr)
updateR()
q()
head(activity)
library(ggplot2)
library(knitr)
activity <- read.csv("./activity/activity.csv")
setwd("C:/Users/user/Desktop/MDEC/5 - reproducible research/assignment1")
library(ggplot2)
library(knitr)
activity <- read.csv("./activity/activity.csv")
head(activity)
activity_data <- activity[!is.na(activity)]
head(activity_data)
activity_data <- na.omit(activity)
head(activity_data)
hist(activity_data$steps)
?hist
?count
?sum
?agregate
?aggregate
aggregate(activity_data, by = list(date,steps) )
aggregate(activity_data, by = list(date,steps), FUN = "mean" )
aggregate(activity_data, by = list(activity_data.date,activity_data.steps), FUN = "mean" )
aggregate(activity_data, by = list(activity_data$date,activity_data$steps), FUN = "mean" )
m <- aggregate(activity_data, by = list(activity_data$date,activity_data$steps), FUN = "mean" )
head(m)
ggplot(activity_data, aes(steps)) + geom_histogram() +
xlab("Steps") + ylab("Date") +
opts(title = "Mean total number of steps taken per day")
ggplot(activity_data, aes(steps)) + geom_histogram() +
xlab("Steps") + ylab("Date") +
theme(title = "Mean total number of steps taken per day")
aggregate(activity_data,by=list(activity_data$date),FUN=sum)
dcast
?dcast
?melt
melt(activity, id.vars ="date", measure.vars = "steps", na.rm = TRUE)
melt(data = activity, id.vars ="date", measure.vars = "steps", na.rm = TRUE)
library(reshape2)
melt(data = activity, id.vars ="date", measure.vars = "steps", na.rm = TRUE)
activity_data <- melt(data = activity, id.vars ="date", measure.vars = "steps", na.rm = TRUE)
?dcast
steps_byday <- dcast(activity_data, date ~ variable, sum)
head(steps_byday)
?hist
hist(steps_byday)
plot(steps_byday)
?mean
mean_stepsperday = mean(steps_byday$steps)
mean_stepsperday
?median
head(activity)
?weekdays
?POSIXt
library(POSIXlt)
?weekdays
library(dat)
library(date)
library(datetime)
library(timeDate)
?timedate
?timeDate
library(weekdays)
library(stptime)
library(strptime)
install.package("strptime")
weekdays(.leap.seconds)
weekdays(weekdays$date)
weekdays(activity$date)
weekdays(as.factor(activity$date))
head(activity$date)
weekdays(strptime(activity$date))
weekdays(activity$date)
?weekdays
weekdays(as.POSIXlt(activity$date))
data_week$weektime <- as.factor(ifelse(weekdays(as.POSIXlt(NO_NA_data$date)) %in% c("Saturday","Sunday"),"weekend", "weekday"))
